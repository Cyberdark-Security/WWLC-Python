# üêç WWLC - Web Wordlist Creator (v1.0)

**WWLC (Web Wordlist Creator)** es una herramienta avanzada escrita en **Python** para generar diccionarios de palabras personalizados a partir de sitios web. Dise√±ada para tareas de reconocimiento, WWLC destaca por su capacidad de extraer contenido din√°mico y datos ocultos, superando las limitaciones de los scrapers tradicionales.

---

## üåü Caracter√≠sticas Principales

- **An√°lisis Din√°mico**: Utiliza **Playwright** para renderizar JavaScript y extraer contenido de aplicaciones web modernas.
- **Intercepci√≥n de APIs**: Captura respuestas de APIs en formato JSON para descubrir datos adicionales.
- **Rastreo Profundo**: Navega autom√°ticamente por enlaces del mismo dominio para recopilar m√°s contenido.
- **Extracci√≥n de Correos**: Identifica direcciones de correo en texto, enlaces `mailto:` y respuestas de APIs.
- **An√°lisis de Metadatos**: Descarga y extrae metadatos de archivos `.pdf`, como autor y creador.
- **Procesamiento Inteligente de Palabras**:
  - Limpieza y formateo autom√°tico de palabras.
  - Filtrado de fechas, horas y t√©rminos num√©ricos.
  - Divisi√≥n de palabras compuestas (ej: "websecurity" ‚Üí "web", "security").
  - Generaci√≥n de variaciones comunes para contrase√±as.

---

## üõ†Ô∏è Instalaci√≥n

WWLC v1.0 est√° optimizado para entornos como **Kali Linux** y otras distribuciones basadas en Debian/Ubuntu.

### Requisitos Previos
Aseg√∫rate de tener instalados `git` y `pip`:
```bash
sudo apt update
sudo apt install git python3-pip -y
```

### Pasos de Instalaci√≥n
1. Clona el repositorio:
   ```bash
   git clone https://github.com/Cyberdark-Security/WWLC-Python.git
   cd WWLC-Python
   ```

2. Instala las dependencias:
   ```bash
   pip install -r requirements.txt
   ```

3. Configura los navegadores de Playwright:
   ```bash
   playwright install
   ```

> **Nota**: El comando `playwright install` descarga una versi√≥n de Chromium necesaria para la automatizaci√≥n.

---

## üöÄ Uso

Ejecuta WWLC con el comando:
```bash
./wwlc.py <URL> [opciones]
```

### Opciones Disponibles

| Opci√≥n | Descripci√≥n | Ejemplo |
|--------|-------------|---------|
| `URL` | **Requerido**. URL del sitio web a analizar. | `./wwlc.py https://example.com` |
| `-o, --output <archivo>` | Especifica el archivo de salida para la lista de palabras (por defecto: `wordlist.txt`). | `./wwlc.py https://example.com -o mi_diccionario.txt` |
| `-e, --email` | Activa la extracci√≥n de correos electr√≥nicos. | `./wwlc.py https://example.com -e` |
| `--email-file <archivo>` | Guarda los correos en un archivo espec√≠fico (requiere `-e`). | `./wwlc.py https://example.com -e --email-file correos.txt` |
| `-a, --meta` | Activa la extracci√≥n de metadatos de archivos `.pdf`. | `./wwlc.py https://example.com -a` |
| `--meta-file <archivo>` | Guarda las palabras de metadatos en un archivo (requiere `-a`). | `./wwlc.py https://example.com -a --meta-file meta.txt` |
| `--min-length <n√∫mero>` | Filtra palabras por longitud m√≠nima (por defecto: 3). | `./wwlc.py https://example.com --min-length 5` |
| `--max-length <n√∫mero>` | Filtra palabras por longitud m√°xima (por defecto: 20). | `./wwlc.py https://example.com --max-length 10` |
| `--no-split` | Desactiva la divisi√≥n de palabras compuestas. | `./wwlc.py https://example.com --no-split` |
| `--no-variations` | Desactiva la generaci√≥n de variaciones de palabras. | `./wwlc.py https://example.com --no-variations` |
| `--help` | Muestra el men√∫ de ayuda. | `./wwlc.py --help` |

---

## üìã Ejemplo Completo

Para analizar un sitio, extraer correos, metadatos y generar una lista de palabras con longitud m√≠nima de 5 caracteres:
```bash
./wwlc.py https://example.com -e --email-file correos.txt -a --meta-file meta.txt --min-length 5 -o palabras.txt
```

---

## ‚ö†Ô∏è Notas Importantes

- **Uso √âtico**: WWLC v1.0 est√° dise√±ado para pruebas de seguridad autorizadas. √ösalo solo en sitios web donde tengas permiso expl√≠cito.
- **Rendimiento**: El rastreo profundo y la extracci√≥n de APIs pueden consumir tiempo y recursos en sitios grandes.
- **Soporte de Archivos**: Actualmente, la extracci√≥n de metadatos est√° limitada a archivos `.pdf`.

---

## üìú Licencia

Este proyecto est√° licenciado bajo la **Licencia MIT**. Consulta el archivo `LICENSE` para m√°s detalles.

---

## ü§ù Contribuciones

¬°Contribuye al proyecto! Si tienes ideas, mejoras o encuentras errores:
1. Crea un *issue* en el repositorio.
2. Env√≠a un *pull request* con tus cambios.

---

## üì¨ Contacto

Para soporte o consultas, contacta al equipo de **Cyberdark Security** a trav√©s de nuestro [repositorio en GitHub](https://github.com/Cyberdark-Security/WWLC-Python).